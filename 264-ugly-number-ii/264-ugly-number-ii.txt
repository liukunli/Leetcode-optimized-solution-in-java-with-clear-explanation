/*
triple pointer method
num2, point to the previous number multiplied by 2
num3, point to the previous number multiplied by 3
num5, point to the previous number multiplied by 5

O(n) time and O(1) space

Another solution is to priority queue
*/
class Solution {
    public int nthUglyNumber(int n) {
        if(n<1) {
            return 0;
        }
        int[] arr = new int[n];
        arr[0] =1;
        int num2 = 0;
        int num3 = 0;
        int num5 = 0;
        for(int i=1;i<n;i++) {
            // get the next ugly number
            int min = Math.min(Math.min(arr[num2]*2,arr[num3]*3),arr[num5]*5);
            arr[i] = min;
            // move pointers of num2, num3 and num5
            if(arr[num2]*2==min) {
                num2++;
            }
            if(arr[num3]*3==min) {
                num3++;
            }
            if(arr[num5]*5==min) {
                num5++;
            }
        }
        return arr[n-1];
    }
}