/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseBetween(ListNode head, int m, int n) {
    if (head == null) return null;
    // find the element before the first element to reverse
    ListNode dummy = new ListNode(0), pre = dummy;
    dummy.next = head;
    for(int i = 0; i < m-1; i++) {
        pre = pre.next;
    }

    // cur is the element to reverse
    ListNode cur = pre.next;
    for(int i = m; i < n; i++) {
        // do the reverse for n elements
        ListNode temp = cur.next;
        cur.next = temp.next;
        temp.next = pre.next;
        pre.next = temp;
    }
    return dummy.next;
}
}