/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */

/*
linkedlist cycle template:

// detect cycle
slow = head;
fast = head.next;
while(slow != fast) {
    slow = slow.next;
    fast = fast.next;
}

// find entry in the cycle
slow = head;
while(slow != fast) {
    slow = slow.next;
    fast = fast.next;
}
return slow; 

// find the length of the cycle
fast = slow.next;
length = 1;
while(slow != fast) {
    fast = fast.next;
    length++;
}



*/
public class Solution {
    public boolean hasCycle(ListNode head) {
        if (head == null) {
            return false;
        }
        ListNode l1 = head, l2 = head.next;
        while (l1 != null && l2 != null && l2.next != null) {
            if (l1 == l2) {
                return true;
            }
            l1 = l1.next;
            l2 = l2.next.next;
        }
        return false;
    }
}