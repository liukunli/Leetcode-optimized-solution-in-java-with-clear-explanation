/*

Loop through both list
Use a carry over to keep track of the elements
check the carry over after looping through all the elements in both lists
*/






class Solution {
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        
        // check edge case
        if(l1 == null) {
            return l2;
        } 
        if(l2 == null) {
            return l1;
        }
        
        // use a dummy node to always point to the head
        ListNode dummy = new ListNode(-1);
        ListNode current = dummy;
        
        int carry_over = 0;
        
        while(l1 != null || l2 != null) {
            int temp1 = l1 == null ? 0 : l1.val;
            int temp2 = l2 == null ? 0 : l2.val;
            int val_temp = temp1 + temp2 + carry_over;
            int val;
            if(val_temp >= 10) {
                val = val_temp - 10;
                carry_over = 1;
            } else {
                val = val_temp;
                carry_over = 0;
            }
            ListNode nextNode = new ListNode(val);
            current.next = nextNode;
            current = nextNode;
            l1 = l1 == null ? null : l1.next;
            l2 = l2 == null ? null : l2.next;
        }
        
        
        // check the carry over after looping through all the elements in both lists
        if(carry_over == 1) {
            ListNode nextNode = new ListNode(1);
            current.next = nextNode;
        }
        
        return dummy.next;
    }