/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
/*
use recursion
head, head.next, head.next.next
swap head and head.next
do recursive call on head.next.next

*/
class Solution {
    public ListNode swapPairs(ListNode head) {
        
        if(head == null || head.next == null) {
            return head;
        }
        
        ListNode temp = new ListNode();
        
        temp = head.next;
        
        head.next = swapPairs(head.next.next);
        
        temp.next = head;
        
        return temp;
        
    }
}